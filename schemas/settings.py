"""
Django settings for schemas project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import datetime
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'debug_toolbar',
    'mainapp.apps.MainappConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'schemas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mainapp.context_processors.add_username',
            ],
        },
    },
]

WSGI_APPLICATION = 'schemas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
DATE_FORMAT = 'Y-m-d'
USE_L10N = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'login'

DATA_GENERATION_SETTINGS = {
    "EML": {
        "MIN_EMAIL_NAME_LENGTH": 5,
        "MAX_EMAIL_NAME_LENGTH": 12,
        "EMAIL_DOMAINS": ['gmail.com'],
    },
    "DMN": {
        "MIN_DOMAIN_NAME_LENGTH": 3,
        "MAX_DOMAIN_NAME_LENGTH": 15,
        "TOP_LEVEL_DOMAINS": ['com', 'ua', 'club', 'net', 'org', 'uk', 'jp', 'pl', 'io', 'edu', 'gov', 'info'],
    },
    "PHN": {
        "COUNTRY_CODES": ['+380'],
        "DIGITS_TOTAL": 12,
    },
    "CNM": {
        "MIN_WORD_LENGTH": 5,
        "MAX_WORD_LENGTH": 15,
        "MIN_WORDS_AMOUNT": 1,
        "MAX_WORDS_AMOUNT": 5,
    },
    "TXT": {
        "MIN_WORD_LENGTH": 3,
        "MAX_WORD_LENGTH": 10,
        "MIN_SENTENCE_LENGTH": 3,
        "MAX_SENTENCE_LENGTH": 10,
    },
    "ADR": {
        "MIN_COUNTRY_NAME_LENGTH": 3,
        "MAX_COUNTRY_NAME_LENGTH": 14,
        "MIN_DISTRICT_NAME_LENGTH": 5,
        "MAX_DISTRICT_NAME_LENGTH": 14,
        "MIN_CITY_NAME_LENGTH": 5,
        "MAX_CITY_NAME_LENGTH": 8,
        "MIN_STREET_WORDS_AMOUNT": 1,
        "MAX_STREET_WORDS_AMOUNT": 3,
        "MIN_STREET_NUMBER": 1,
        "MAX_STREET_NUMBER": 100,
        "MIN_BUILDING_NUMBER": 1,
        "MAX_BUILDING_NUMBER": 500,
    },
    "DTE": {
        "START_DATE": datetime.date(1000, 1, 1),
        "END_DATE": datetime.date(2100, 12, 31),
    },
}

if DEBUG:
    import socket

    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS = [ip[: ip.rfind(".")] + ".1" for ip in ips] + ["127.0.0.1", "10.0.2.2"]
