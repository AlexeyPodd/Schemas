# Generated by Django 4.1.3 on 2023-06-17 11:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import mainapp.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('have_limits', models.BooleanField(default=False, verbose_name='have limits')),
                ('source_file', models.FileField(blank=True, null=True, upload_to=mainapp.utils.get_source_file_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['json'])], verbose_name='source file')),
            ],
            options={
                'verbose_name': 'Data type',
                'verbose_name_plural': 'Data types',
            },
        ),
        migrations.CreateModel(
            name='Separator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('char', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('delimiter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schemas_of_delimiter', to='mainapp.separator')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schemas', to=settings.AUTH_USER_MODEL)),
                ('quotechar', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schemas_of_quotechar', to='mainapp.separator')),
            ],
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('file', models.FileField(blank=True, null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['csv'])], verbose_name='csv file')),
                ('finished', models.BooleanField(default=False, verbose_name='generating csv file is finished')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.schema')),
            ],
            options={
                'verbose_name': 'Data set',
                'verbose_name_plural': 'Data sets',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('minimal', models.SmallIntegerField(blank=True, null=True)),
                ('maximal', models.SmallIntegerField(blank=True, null=True)),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='columns', to='mainapp.datatype', verbose_name='type')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='mainapp.schema')),
            ],
            options={
                'verbose_name': 'Schema column',
                'verbose_name_plural': 'Schema columns',
            },
        ),
    ]
